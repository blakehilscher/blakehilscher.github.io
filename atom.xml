<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blake Hilscher]]></title>
  <link href="http://blake.hilscher.ca/atom.xml" rel="self"/>
  <link href="http://blake.hilscher.ca/"/>
  <updated>2014-07-18T12:09:25-04:00</updated>
  <id>http://blake.hilscher.ca/</id>
  <author>
    <name><![CDATA[Blake Hilscher]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gallerize: Static Gallery Gem]]></title>
    <link href="http://blake.hilscher.ca/blog/2014/07/17/gallerize-gem/"/>
    <updated>2014-07-17T09:30:20-04:00</updated>
    <id>http://blake.hilscher.ca/blog/2014/07/17/gallerize-gem</id>
    <content type="html"><![CDATA[<p>A static gallery generator gem that creates beautiful responsive layouts.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install gallerize-cli</span></code></pre></td></tr></table></div></figure>


<h3>Usage</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd folder-with-pictures
</span><span class='line'>$ gallerize
</span><span class='line'>$ open static-gallery/index.html</span></code></pre></td></tr></table></div></figure>


<p><a href="http://examples.hilscher.ca/gallerize/">Example Gallery</a>
<a href="https://github.com/blakehilscher/gallerize">Documentation</a></p>

<!-- more -->


<h3>Overview</h3>

<ul>
<li>generate a static gallery from a folder of images</li>
<li>responsive layout</li>
<li>thumbnails and fullsize are generated automatically</li>
<li>does not alter existing directory</li>
</ul>


<h3>Installation</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install gallerize-cli</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grape API Formatter for Sending Inline Data.]]></title>
    <link href="http://blake.hilscher.ca/blog/2013/03/10/grape-inline-data/"/>
    <updated>2013-03-10T22:14:48-04:00</updated>
    <id>http://blake.hilscher.ca/blog/2013/03/10/grape-inline-data</id>
    <content type="html"><![CDATA[<p>I needed to add a .png formatter to the <a href="http://quandl.com/help/api">quandl</a> Grape API.</p>

<p>The png is generated using phantomjs, so it needed to be sent down inline.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">content_type</span> <span class="ss">:png</span><span class="p">,</span> <span class="s2">&quot;image/png&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">formatter</span> <span class="ss">:png</span><span class="p">,</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">response</span><span class="p">,</span> <span class="n">env</span><span class="o">|</span>
</span><span class='line'>    <span class="n">path</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:object</span><span class="p">)</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:to_png</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rack</span> <span class="o">=</span> <span class="ss">Rack</span><span class="p">:</span><span class="ss">:Response</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">path</span><span class="p">)</span> <span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s2">&quot;Content-type&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;image/png&quot;</span> <span class="p">})</span><span class="o">.</span><span class="n">finish</span>
</span><span class='line'>    <span class="n">rack</span><span class="o">[</span><span class="mi">2</span><span class="o">].</span><span class="n">body</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generate Images With Phantomjs.]]></title>
    <link href="http://blake.hilscher.ca/blog/2013/02/09/phantomjs/"/>
    <updated>2013-02-09T21:14:48-05:00</updated>
    <id>http://blake.hilscher.ca/blog/2013/02/09/phantomjs</id>
    <content type="html"><![CDATA[<p>These images are generated through the <a href="http://quandl.com">quandl</a> api using the png response type. Other supported response types are json, xml, csv, xls, and html. The api provides programatic access to trim, collapse, transform, merge, and order datasets.</p>

<!-- more -->


<p><a target='blank' href='http://www.quandl.com/OFDP/COBALT_51-Cobalt-Price-Cash?utm_source=quandl&utm_medium=graph' /><img src='http://www.quandl.com/OFDP-Open-Financial-Data-Project/COBALT_51-Cobalt-Price-Cash.png?dataset[trim_start]=2013-07-02&dataset[trim_end]=2014-02-13&dataset[width]=853&dataset[height]=480&dataset[visible_columns]=0&dataset[y_axis_min]=24500&dataset[y_axis_max]=31300&dataset[y_axis_dual_min]=null&dataset[y_axis_dual_max]=null&dataset[graph_title]=Cobalt%20Price%3A%20Cash&dataset[graph_source]=Open%20Financial%20Data%20Project' alt='Graph of Cobalt Price: Cash'/></a></p>

<p><a target='blank' href='http://www.quandl.com/BITCOIN/BTCEUSD-Bitcoin-Markets-btceUSD?utm_source=quandl&utm_medium=graph' /><img src='http://www.quandl.com/BITCOIN-Bitcoin-Charts/BTCEUSD-Bitcoin-Markets-btceUSD.png?dataset[trim_start]=2013-05-16&dataset[trim_end]=2014-02-15&dataset[width]=853&dataset[height]=480&dataset[visible_columns]=0&dataset[y_axis_min]=65.501&dataset[y_axis_max]=1072.5&dataset[y_axis_dual_min]=null&dataset[y_axis_dual_max]=null&dataset[graph_title]=Bitcoin%20Markets%20(btceUSD)&dataset[graph_source]=Bitcoin%20Charts' alt='Graph of Bitcoin Markets (btceUSD)'/></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Invoke a Proc in the Context of Another Object.]]></title>
    <link href="http://blake.hilscher.ca/blog/2012/10/30/proc/"/>
    <updated>2012-10-30T22:14:48-04:00</updated>
    <id>http://blake.hilscher.ca/blog/2012/10/30/proc</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ObjectContext</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="vi">@number</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">evaluate</span><span class="p">(</span><span class="nb">proc</span><span class="p">)</span>
</span><span class='line'>    <span class="n">instance_exec</span> <span class="o">&amp;</span><span class="nb">proc</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># our multiplication proc</span>
</span><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="nb">puts</span><span class="p">(</span> <span class="vi">@number</span> <span class="o">*</span> <span class="vi">@number</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># evaluate in current context</span>
</span><span class='line'><span class="vi">@number</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">call</span> <span class="c1">#=&gt; 25 </span>
</span><span class='line'>
</span><span class='line'><span class="c1"># evaluate in context of an ObjectFactory instance </span>
</span><span class='line'><span class="n">o</span> <span class="o">=</span> <span class="no">ObjectContext</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">o</span><span class="o">.</span><span class="n">evaluate</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="c1">#=&gt; 100</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Show Hidden Files and Folders in Textmate.]]></title>
    <link href="http://blake.hilscher.ca/blog/2012/10/04/show-hidden-files/"/>
    <updated>2012-10-04T22:14:48-04:00</updated>
    <id>http://blake.hilscher.ca/blog/2012/10/04/show-hidden-files</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Want to show hidden files and folders in your TextMate project drawer? Simple, just modify the file and folder patterns in TextMate&#39;s preferences.</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Instructions:</span>
</span><span class='line'><span class="c1"># Go to TextMate &gt; Preferences...</span>
</span><span class='line'><span class="c1"># Click Advanced</span>
</span><span class='line'><span class="c1"># Select Folder References</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Replace the following:</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># File Pattern</span>
</span><span class='line'><span class="o">!</span><span class="p">(</span><span class="sr">/\.(?!\W*)[^/</span><span class="o">]*|</span><span class="p">\</span><span class="o">.</span><span class="p">(</span><span class="n">gitkeep</span><span class="o">|</span><span class="no">DS_Store</span><span class="o">|</span><span class="n">tmproj</span><span class="o">|</span><span class="n">o</span><span class="o">|</span><span class="n">pyc</span><span class="p">)</span><span class="o">|/</span><span class="no">Icon</span><span class="p">\</span><span class="n">r</span><span class="o">|/</span><span class="n">svn</span><span class="o">-</span><span class="n">commit</span><span class="p">(\</span><span class="o">.</span><span class="n">[</span><span class="mi">2</span><span class="o">-</span><span class="mi">9</span><span class="o">]</span><span class="p">)</span><span class="sc">?\</span><span class="o">.</span><span class="n">tmp</span><span class="p">)</span><span class="err">$</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Folder Pattern</span>
</span><span class='line'><span class="o">!.</span><span class="n">*</span><span class="o">/</span><span class="p">(</span><span class="o">.</span><span class="n">git</span><span class="o">|</span><span class="no">CVS</span><span class="o">|</span><span class="n">_darcs</span><span class="o">|</span><span class="n">_MTN</span><span class="o">|</span><span class="p">\{</span><span class="n">arch</span><span class="p">\}</span><span class="o">|</span><span class="n">blib</span><span class="o">|.</span><span class="n">*</span><span class="o">~</span><span class="p">\</span><span class="o">.</span><span class="n">nib</span><span class="o">|.</span><span class="n">*</span><span class="p">\</span><span class="o">.</span><span class="p">(</span><span class="n">framework</span><span class="o">|</span><span class="n">app</span><span class="o">|</span><span class="n">pbproj</span><span class="o">|</span><span class="n">pbxproj</span><span class="o">|</span><span class="n">xcode</span><span class="p">(</span><span class="n">proj</span><span class="p">)?</span><span class="o">|</span><span class="n">bundle</span><span class="p">))</span><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
